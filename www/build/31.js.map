{"version":3,"sources":["../../src/pages/faultregistry/faultregistry.module.ts","../../src/pages/faultregistry/faultregistry.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACI;AACM;AAW1D;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yEAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yEAAiB,CAAC;gBAC3C,gFAAsB;aACvB;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACdM;AAC2D;AACpC;AAEC;AAC0C;AACnD;AAEzD;;;;;GAKG;AAmBH;IAiBI,2BAAmB,aAA2B,EAAS,OAAsB,EAAS,QAAkB,EAAS,SAAoB,EAAS,SAA0B,EAAS,WAAgC,EAAS,SAA0B,EAAS,EAAgB;QAA1P,kBAAa,GAAb,aAAa,CAAc;QAAS,YAAO,GAAP,OAAO,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,cAAS,GAAT,SAAS,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAqB;QAAS,cAAS,GAAT,SAAS,CAAiB;QAAS,OAAE,GAAF,EAAE,CAAc;QAhB7Q,0BAAqB,GAAyB,EAAE,CAAC;QAC1C,mBAAc,GAAyB,EAAE,CAAC;QAIjD,SAAI,GAAG,KAAK,CAAC;QAEb,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QA4PlB,gBAAW,GAAG,UAAC,KAAK,EAAE,IAAI;YACtB,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;IArPD,CAAC;IAED,0CAAc,GAAd;QAAA,iBAWC;QAVG,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,cAAI;YAClD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,KAAI,CAAC,QAAQ,IAAI,UAAU,IAAI,KAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;gBACzD,KAAI,CAAC,IAAI,GAAG,IAAI;aACnB;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED,2CAAe,GAAf;QAAA,iBAUC;QATG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,cAAI;YAClD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,KAAI,CAAC,QAAQ,IAAI,UAAU,IAAI,KAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;gBACzD,KAAI,CAAC,IAAI,GAAG,IAAI;aACnB;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAEO,+CAAmB,GAA3B;QAAA,iBAgBC;QAfG,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE;aACtB,IAAI,CAAC,UAAC,cAAoC;YACvC,KAAI,CAAC,qBAAqB,GAAG,cAAc,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,EAAtI,CAAsI,CAAC,CAAC;YACnM,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,KAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,IAAI,KAAK,EAAtI,CAAsI,CAAC,CAAC;YAC5L,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,uBAAa;gBAC5C,IAAI,aAAa,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC9B,WAAW,CAAC;wBACR,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;oBACxC,CAAC,EAAE,GAAG,CAAC;oBACP,WAAW,CAAC;wBACR,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;oBACvC,CAAC,EAAE,IAAI,CAAC;iBACX;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC;IAED,gCAAI,GAAJ;QACI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,gDAAoB,GAApB,UAAqB,MAAW;QAC5B,IAAM,KAAK,GAAW,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACnF,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAEhC,KAA0B,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;YAA1C,IAAI,aAAa;YAClB,IAAI,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;gBACxD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAClD;SACJ;IACL,CAAC;IAED,uCAAW,GAAX;QAAA,iBAQC;QAPG,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3E,KAAK,CAAC,YAAY,CAAC,UAAC,IAAI;YACpB,IAAI,IAAI,EAAE;gBACN,KAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,wCAAY,GAAZ,UAAa,aAAmB;QAAhC,iBAMC;QALG,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC,CAAC;QAC1G,KAAK,CAAC,YAAY,CAAC,UAAC,IAAI;YACpB,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,0CAAc,GAAd,UAAe,aAA4B;QAA3C,iBAuBC;QAtBG,IAAI,IAAI,CAAC,QAAQ,IAAI,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC7D,IAAM,OAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,KAAK,EAAE,uBAAuB;gBAC9B,OAAO,EAAE,wDAAwD,GAAG,aAAa,CAAC,OAAO;gBACzF,OAAO,EAAE;oBACL;wBACI,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,QAAQ;qBACjB;oBACD;wBACI,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE;4BACL,KAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC;iCACrC,IAAI,CAAC,UAAC,OAAgB;gCACnB,KAAI,CAAC,mBAAmB,EAAE,CAAC;4BAC/B,CAAC,CAAC,CAAC;wBACX,CAAC;qBACJ;iBACJ;aACJ,CAAC,CAAC;YACH,OAAK,CAAC,OAAO,EAAE,CAAC;SACnB;IACL,CAAC;IAED,iCAAK,GAAL,UAAM,QAAQ;QAAd,iBASC;QAPG,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC;QAC9F,KAAK,CAAC,YAAY,CAAC,UAAC,IAAI;YACpB,IAAI,IAAI,EAAE;gBACN,KAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;QACL,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAED,mCAAO,GAAP,UAAQ,QAAQ;QAAhB,iBAiEC;QAhEG,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,QAAQ,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAG;YAC1C,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,KAAI,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,qBAAW;gBACrC,KAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,IAAI,SAAS,EAAtB,CAAsB,CAAC,CAAC;gBACxE,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,WAAW,IAAI,KAAK,EAAzB,CAAyB,CAAC,CAAC;gBACvE,KAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,IAAI,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,EAAtE,CAAsE,CAAC,CAAC;gBAC/H,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,EAApE,CAAoE,CAAC,CAAC;gBAGvH,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAI;oBAC3B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAI;oBACvB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,cAAI;oBAClC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAI;oBAC5B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBAEH,IAAI,SAAS,GAAG;oBACZ,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI;oBACpB,UAAU,EAAE,KAAI,CAAC,IAAI,CAAC,WAAW;oBACjC,KAAK,EAAE,KAAI,CAAC,eAAe;oBAC3B,WAAW,EAAE,KAAI,CAAC,IAAI,CAAC,MAAM;oBAC7B,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ;oBAC5B,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,WAAW,EAAE,QAAQ,CAAC,WAAW;oBACjC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;oBAC3B,QAAQ,EAAE,QAAQ,CAAC,OAAO;oBAC1B,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,QAAQ,CAAC,WAAW;oBACjC,gBAAgB,EAAE,QAAQ,CAAC,gBAAgB;oBAC3C,YAAY,EAAE,QAAQ,CAAC,YAAY;oBACnC,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;oBAC7C,OAAO,EAAE,QAAQ,CAAC,OAAO;iBAC5B;gBAED,KAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;gBAChE,CAAC,CAAC,CAAC;gBAEH,oCAAoC;gBAChC,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC3D,CAAC,CAAC;gBACN,GAAG;gBAEH,KAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAG;oBAC1C,KAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC/B,CAAC,CAAC;YACN,CAAC,CAAC;QAEN,CAAC,CAAC,CAAC;IAIP,CAAC;IAED,sCAAU,GAAV,UAAW,QAAQ;QAAnB,iBA4DC;QA3DG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAG;YAC1C,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,KAAI,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,qBAAW;gBACrC,KAAI,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,IAAI,SAAS,EAAtB,CAAsB,CAAC,CAAC;gBACxE,KAAI,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,WAAW,IAAI,KAAK,EAAzB,CAAyB,CAAC,CAAC;gBACvE,KAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,IAAI,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,EAAtE,CAAsE,CAAC,CAAC;gBAC/H,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,WAAW,IAAI,KAAI,CAAC,IAAI,CAAC,WAAW,EAApE,CAAoE,CAAC,CAAC;gBAGvH,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAC1B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAI;oBAC3B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAI;oBACvB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,cAAI;oBAClC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,cAAI;oBAC5B,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBAGH,IAAI,SAAS,GAAG;oBACZ,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI;oBACpB,UAAU,EAAE,KAAI,CAAC,IAAI,CAAC,WAAW;oBACjC,KAAK,EAAE,KAAI,CAAC,eAAe;oBAC3B,WAAW,EAAE,KAAI,CAAC,IAAI,CAAC,MAAM;oBAC7B,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ;oBAC5B,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,WAAW,EAAE,QAAQ,CAAC,WAAW;oBACjC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;oBAC3B,QAAQ,EAAE,QAAQ,CAAC,OAAO;oBAC1B,IAAI,EAAE,YAAY;oBAClB,WAAW,EAAE,QAAQ,CAAC,WAAW;oBACjC,gBAAgB,EAAE,QAAQ,CAAC,gBAAgB;oBAC3C,YAAY,EAAE,QAAQ,CAAC,YAAY;oBACnC,iBAAiB,EAAE,QAAQ,CAAC,iBAAiB;oBAC7C,OAAO,EAAE,QAAQ,CAAC,OAAO;iBAC5B;gBAED,KAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;gBAChE,CAAC,CAAC,CAAC;gBAEH,oCAAoC;gBAChC,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC3D,CAAC,CAAC;gBACN,GAAG;YACP,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IAEP,CAAC;IAnQQ,iBAAiB;QAhB7B,gEAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAsB;YACjC,gFAAU,CAAE;gBACR,8EAAQ,oFAAgB;oBACpB,KAAK,CAAC,OAAO,CAAQ;wBACP;8FACX;oBACH,KAAK,CAAC,MAAM,EAAQ;wBACN;mGACX;oBACH,+EAAU,CAAC,eAAe,EAAE,4EAAO,CAAC,eAAe,CAAC,CAAC;kBACC;aACxD;WACL;SACJ,CAAC;0BAkB+Q;OAjBpQ,iBAAiB,CAyQ7B;IAAD,CAAC;AAAA;SAzQY,iBAAiB,e","file":"31.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FaultregistryPage } from './faultregistry';\nimport { IonicImageViewerModule } from 'ionic-img-viewer';\n\n@NgModule({\n  declarations: [\n    FaultregistryPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FaultregistryPage),\n    IonicImageViewerModule\n  ],\n})\nexport class FaultregistryPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/faultregistry/faultregistry.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, ModalController, Platform, NavParams, AlertController } from 'ionic-angular';\r\nimport { PouchService } from '../../pouch-service/pouch.service';\r\nimport { Faultregistry } from '../../models/faultregistry';\r\nimport { HttpserviceProvider } from '../../providers/httpservice';\r\nimport { trigger, style, transition, animate, state, keyframes, query, stagger } from '@angular/animations';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n/**\r\n * Generated class for the FaultregistryPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-faultregistry',\r\n    templateUrl: 'faultregistry.html',\r\n    animations: [\r\n        trigger('elementState', [\r\n            state('false', style({\r\n                opacity: 1\r\n            })),\r\n            state('true', style({\r\n                opacity: 0\r\n            })),\r\n            transition('false => true', animate('500ms ease-in')),\r\n            transition('true => false', animate('500ms ease-out'))\r\n        ])\r\n    ]\r\n})\r\nexport class FaultregistryPage {\r\n    filteredFaultregistry: Array<Faultregistry> = [];\r\n    public faultregistrys: Array<Faultregistry> = [];\r\n    localStorageItem;\r\n    position;\r\n    public user: any;\r\n    show = false;\r\n    status;\r\n    disabled = false;\r\n    disabled2 = false;\r\n    allRegistry;\r\n    filterManager;\r\n    filterHse;\r\n    filterAreaSupervisor;\r\n    filterOperator;\r\n    supervisorArray;\r\n\r\n    constructor(public _DomSanitizer: DomSanitizer, public navCtrl: NavController, public platform: Platform, public navParams: NavParams, public modalCtrl: ModalController, public httpService: HttpserviceProvider, public alertCtrl: AlertController, public db: PouchService, ) {\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        console.log('ionViewDidLoad FaultregistryPage');\r\n        this.localStorageItem = JSON.parse(localStorage.getItem('user'));\r\n        this.db.getSupervisor(this.localStorageItem).then(item => {\r\n            this.user = item;\r\n            this.position = item.post;\r\n            if (this.position == 'Operator' || this.position == 'Admin') {\r\n                this.show = true\r\n            }\r\n        });\r\n        this._loadFaultregistrys();\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n        this.localStorageItem = JSON.parse(localStorage.getItem('user'));\r\n        this.db.getSupervisor(this.localStorageItem).then(item => {\r\n            this.user = item;\r\n            this.position = item.post;\r\n            if (this.position == 'Operator' || this.position == 'Admin') {\r\n                this.show = true\r\n            }\r\n        });\r\n        this._loadFaultregistrys();\r\n    }\r\n\r\n    private _loadFaultregistrys(): void {\r\n        this.db.getfaultregistrys()\r\n            .then((faultregistrys: Array<Faultregistry>) => {\r\n                this.filteredFaultregistry = faultregistrys.filter(data => data.department == this.user.departments || this.user.post == 'Manager' || this.user.post == 'Admin' || this.user.departments == 'HSE');\r\n                this.faultregistrys = faultregistrys.filter(data => data.department == this.user.departments || this.user.post == 'Manager' || this.user.post == 'Admin' || this.user.departments == 'HSE');\r\n                this.filteredFaultregistry.forEach(faultregistry => {\r\n                    if (faultregistry.status == true) {\r\n                        setInterval(() => {\r\n                            faultregistry.animateswitch = false;\r\n                        }, 500)\r\n                        setInterval(() => {\r\n                            faultregistry.animateswitch = true;\r\n                        }, 1000)\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    back() {\r\n        this.navCtrl.pop();\r\n    }\r\n\r\n    filterFaultregistrys($event: any): void {\r\n        const value: string = $event.target.value ? $event.target.value.toLowerCase() : '';\r\n        this.filteredFaultregistry = [];\r\n\r\n        for (let faultregistry of this.faultregistrys) {\r\n            if (faultregistry.name.toLowerCase().indexOf(value) !== -1) {\r\n                this.filteredFaultregistry.push(faultregistry);\r\n            }\r\n        }\r\n    }\r\n\r\n    newRegistry() {\r\n        let modal = this.modalCtrl.create('AddfaultregistryPage', { type: 'Add' });\r\n        modal.onDidDismiss((data) => {\r\n            if (data) {\r\n                this._loadFaultregistrys();\r\n            }\r\n        });\r\n        modal.present();\r\n    }\r\n\r\n    openRegistry(faultregistry?: any): void {\r\n        let modal = this.modalCtrl.create('AddfaultregistryPage', { type: 'Edit', faultregistry: faultregistry });\r\n        modal.onDidDismiss((data) => {\r\n            this._loadFaultregistrys();\r\n        });\r\n        modal.present();\r\n    }\r\n\r\n    deleteRegistry(faultregistry: Faultregistry) {\r\n        if (this.position == 'Supervisor' || this.position == 'Manager') {\r\n            const alert = this.alertCtrl.create({\r\n                title: 'Delete Fault Registry',\r\n                message: 'Are you sure you want to delete fault registry: flt-00' + faultregistry.faultid,\r\n                buttons: [\r\n                    {\r\n                        text: 'Cancel',\r\n                        role: 'cancel'\r\n                    },\r\n                    {\r\n                        text: 'Confirm',\r\n                        handler: () => {\r\n                            this.db.deletefaultregistry(faultregistry)\r\n                                .then((success: boolean) => {\r\n                                    this._loadFaultregistrys();\r\n                                });\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n            alert.present();\r\n        }\r\n    }\r\n\r\n    fixed(registry) {\r\n        \r\n        let modal = this.modalCtrl.create('FixedPage', { registry: registry, type: 'faultregistry' });\r\n        modal.onDidDismiss((data) => {\r\n            if (data) {\r\n                this._loadFaultregistrys();\r\n            }\r\n        });\r\n        modal.present();\r\n    }\r\n\r\n    approve(registry) {\r\n        registry.color = \"\";\r\n        registry.status = false;\r\n        registry.fixedstatus = true;\r\n        registry.animateswitch = false;\r\n        this.db.updatefaultregistry(registry).then(res => {\r\n            this._loadFaultregistrys();\r\n\r\n            this.db.getSupervisors().then(supervisors => {\r\n                this.filterManager = supervisors.filter(data => data.post == 'Manager');\r\n                this.filterHse = supervisors.filter(data => data.departments == 'HSE');\r\n                this.filterAreaSupervisor = supervisors.filter(data => data.post == 'Supervisor' && data.departments == this.user.departments);\r\n                this.filterOperator = supervisors.filter(data => data.post == 'Operator' && data.departments == this.user.departments);\r\n\r\n\r\n                this.supervisorArray = [];\r\n                this.filterManager.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n                this.filterHse.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n                this.filterAreaSupervisor.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n\r\n                this.filterOperator.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n\r\n                var emailInfo = {\r\n                    name: this.user.name,\r\n                    department: this.user.departments,\r\n                    email: this.supervisorArray,\r\n                    phoneNumber: this.user.mobile,\r\n                    position: this.user.position,\r\n                    faultid: registry.faultid,\r\n                    description: registry.description,\r\n                    location: registry.location,\r\n                    facility: registry.faculty,\r\n                    type: 'approve',\r\n                    datecreated: registry.datecreated,\r\n                    equipmentcatname: registry.equipmentcatname,\r\n                    equipmenttag: registry.equipmenttag,\r\n                    equipmentpartname: registry.equipmentpartname,\r\n                    tagname: registry.tagname\r\n                }\r\n\r\n                this.httpService.sendEmailfaultregistry(emailInfo).subscribe(res => {\r\n                });\r\n\r\n                //if (this.platform.is('cordova')) {\r\n                    this.httpService.faultNotification(emailInfo).subscribe(res => {\r\n                    })\r\n                //}\r\n\r\n                this.db.deletefaultregistry(registry).then(res => {\r\n                    this._loadFaultregistrys();\r\n                })\r\n            })\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    disapprove(registry) {\r\n        registry.color = \"faulty\";\r\n        registry.status = true;\r\n        registry.fixedstatus = false;\r\n        registry.animateswitch = true;\r\n        registry.operatorstatus = true;\r\n        this.db.updatefaultregistry(registry).then(res => {\r\n            this._loadFaultregistrys();\r\n\r\n            this.db.getSupervisors().then(supervisors => {\r\n                this.filterManager = supervisors.filter(data => data.post == 'Manager');\r\n                this.filterHse = supervisors.filter(data => data.departments == 'HSE');\r\n                this.filterAreaSupervisor = supervisors.filter(data => data.post == 'Supervisor' && data.departments == this.user.departments);\r\n                this.filterOperator = supervisors.filter(data => data.post == 'Operator' && data.departments == this.user.departments);\r\n\r\n\r\n                this.supervisorArray = [];\r\n                this.filterManager.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n                this.filterHse.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n                this.filterAreaSupervisor.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n\r\n                this.filterOperator.forEach(item => {\r\n                    this.supervisorArray.push(item.email);\r\n                });\r\n\r\n\r\n                var emailInfo = {\r\n                    name: this.user.name,\r\n                    department: this.user.departments,\r\n                    email: this.supervisorArray,\r\n                    phoneNumber: this.user.mobile,\r\n                    position: this.user.position,\r\n                    faultid: registry.faultid,\r\n                    description: registry.description,\r\n                    location: registry.location,\r\n                    facility: registry.faculty,\r\n                    type: 'disapprove',\r\n                    datecreated: registry.datecreated,\r\n                    equipmentcatname: registry.equipmentcatname,\r\n                    equipmenttag: registry.equipmenttag,\r\n                    equipmentpartname: registry.equipmentpartname,\r\n                    tagname: registry.tagname\r\n                }\r\n\r\n                this.httpService.sendEmailfaultregistry(emailInfo).subscribe(res => {\r\n                });\r\n\r\n                //if (this.platform.is('cordova')) {\r\n                    this.httpService.faultNotification(emailInfo).subscribe(res => {\r\n                    })\r\n                //}\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    trackByName = (index, item) => {\r\n        return item.id;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/faultregistry/faultregistry.ts"],"sourceRoot":""}