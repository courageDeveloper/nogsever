{"version":3,"sources":["../../src/pages/printdailyreport/printdailyreport.module.ts","../../node_modules/@ionic-native/printer/index.js","../../src/pages/printdailyreport/printdailyreport.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACU;AACV;AAahD;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QAXtC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+EAAoB;aACrB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,+EAAoB,CAAC;aAC/C;YACD,SAAS,EAAC;gBACR,sEAAO;aACR;SACF,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;AChBvC;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC2C;AACtF;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kCAAkC,mCAAmC,EAAE;AACvE;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,uBAAuB,qBAAqB;AAC5C,uBAAuB,aAAa;AACpC,iBAAiB;AACjB;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C,yBAAyB,aAAa;AACtC,mBAAmB;AACnB;AACA;AACA;AACA,yBAA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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { PrintdailyreportPage } from './printdailyreport';\r\nimport { Printer } from '@ionic-native/printer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PrintdailyreportPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(PrintdailyreportPage),\r\n  ],\r\n  providers:[\r\n    Printer\r\n  ]\r\n})\r\nexport class PrintdailyreportPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/printdailyreport/printdailyreport.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, CordovaCheck, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Printer\n * @description Prints documents or HTML rendered content\n * @usage\n * ```typescript\n * import { Printer, PrintOptions } from '@ionic-native/printer';\n *\n * constructor(private printer: Printer) { }\n *\n * ...\n *\n * this.printer.isAvailable().then(onSuccess, onError);\n *\n * let options: PrintOptions = {\n *      name: 'MyDocument',\n *      printerId: 'printer007',\n *      duplex: true,\n *      landscape: true,\n *      grayscale: true\n *    };\n *\n * this.printer.print(content, options).then(onSuccess, onError);\n * ```\n * @interfaces\n * PrintOptions\n */\nvar Printer = (function (_super) {\n    __extends(Printer, _super);\n    function Printer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Printer_1 = Printer;\n    /**\n     * Checks whether the device is capable of printing (uses `check()` internally)\n     * @returns {Promise<boolean>}\n     */\n    /**\n       * Checks whether the device is capable of printing (uses `check()` internally)\n       * @returns {Promise<boolean>}\n       */\n    Printer.prototype.isAvailable = /**\n       * Checks whether the device is capable of printing (uses `check()` internally)\n       * @returns {Promise<boolean>}\n       */\n    function () {\n        return this.check()\n            .then(function (res) { return Promise.resolve(res.avail); });\n    };\n    /**\n     * Checks if the printer service is available (iOS) or if printer services are installed and enabled (Android).\n     * @return {Promise<any>} returns a promise that resolve with an object indicating whether printing is available, and providing the number of printers available\n     */\n    /**\n       * Checks if the printer service is available (iOS) or if printer services are installed and enabled (Android).\n       * @return {Promise<any>} returns a promise that resolve with an object indicating whether printing is available, and providing the number of printers available\n       */\n    Printer.prototype.check = /**\n       * Checks if the printer service is available (iOS) or if printer services are installed and enabled (Android).\n       * @return {Promise<any>} returns a promise that resolve with an object indicating whether printing is available, and providing the number of printers available\n       */\n    function () {\n        return new Promise(function (resolve) {\n            Printer_1.getPlugin()\n                .check(function (avail, count) {\n                resolve({ avail: avail, count: count });\n            });\n        });\n    };\n    /**\n     * Displays a system interface allowing the user to select an available printer. To speak with a printer directly you need to know the network address by picking them before via `printer.pick`.\n     * @returns {Promise<any>}\n     */\n    /**\n       * Displays a system interface allowing the user to select an available printer. To speak with a printer directly you need to know the network address by picking them before via `printer.pick`.\n       * @returns {Promise<any>}\n       */\n    Printer.prototype.pick = /**\n       * Displays a system interface allowing the user to select an available printer. To speak with a printer directly you need to know the network address by picking them before via `printer.pick`.\n       * @returns {Promise<any>}\n       */\n    function () { return; };\n    /**\n     * Sends content to the printer.\n     * @param content {string | HTMLElement} The content to print. Can be a URL or an HTML string. If a HTML DOM Object is provided, its innerHtml property value will be used.\n     * @param options {PrintOptions} optional. The options to pass to the printer\n     * @returns {Promise<any>}\n     */\n    /**\n       * Sends content to the printer.\n       * @param content {string | HTMLElement} The content to print. Can be a URL or an HTML string. If a HTML DOM Object is provided, its innerHtml property value will be used.\n       * @param options {PrintOptions} optional. The options to pass to the printer\n       * @returns {Promise<any>}\n       */\n    Printer.prototype.print = /**\n       * Sends content to the printer.\n       * @param content {string | HTMLElement} The content to print. Can be a URL or an HTML string. If a HTML DOM Object is provided, its innerHtml property value will be used.\n       * @param options {PrintOptions} optional. The options to pass to the printer\n       * @returns {Promise<any>}\n       */\n    function (content, options) { return; };\n    Printer.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Printer.prototype, \"check\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], Printer.prototype, \"pick\", null);\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 4\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Printer.prototype, \"print\", null);\n    /**\n     * @name Printer\n     * @description Prints documents or HTML rendered content\n     * @usage\n     * ```typescript\n     * import { Printer, PrintOptions } from '@ionic-native/printer';\n     *\n     * constructor(private printer: Printer) { }\n     *\n     * ...\n     *\n     * this.printer.isAvailable().then(onSuccess, onError);\n     *\n     * let options: PrintOptions = {\n     *      name: 'MyDocument',\n     *      printerId: 'printer007',\n     *      duplex: true,\n     *      landscape: true,\n     *      grayscale: true\n     *    };\n     *\n     * this.printer.print(content, options).then(onSuccess, onError);\n     * ```\n     * @interfaces\n     * PrintOptions\n     */\n    Printer = Printer_1 = __decorate([\n        Plugin({\n            pluginName: 'Printer',\n            plugin: 'cordova-plugin-printer',\n            pluginRef: 'cordova.plugins.printer',\n            repo: 'https://github.com/katzer/cordova-plugin-printer',\n            platforms: ['Android', 'iOS', 'Windows']\n        })\n    ], Printer);\n    return Printer;\n    var Printer_1;\n}(IonicNativePlugin));\nexport { Printer };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/printer/index.js\n// module id = 824\n// module chunks = 15 16","import { Component } from '@angular/core';\r\nimport { IonicPage, ViewController, NavController, NavParams, Platform } from 'ionic-angular';\r\nimport { Dailyreport } from '../../models/dailyreport';\r\nimport { Printer, PrintOptions } from '@ionic-native/printer';\r\n/**\r\n * Generated class for the PrintdailyreportPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-printdailyreport',\r\n  templateUrl: 'printdailyreport.html',\r\n})\r\nexport class PrintdailyreportPage {\r\n  public dailyReport: Dailyreport;\r\n  options: PrintOptions = {\r\n    name: 'Daily Report',\r\n    //printerId: 'printer007',\r\n    duplex: true,\r\n    landscape: true,\r\n    grayscale: true\r\n  };\r\n  loop = false;\r\n\r\n  constructor(private platform: Platform, private printer: Printer, public navCtrl: NavController, public viewCtrl: ViewController, public navParams: NavParams) {\r\n      this.dailyReport = this.navParams.get('dailyreport');\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad PrintdailyreportPage');\r\n    if (this.platform.is('cordova')) {\r\n      this.printMobile();\r\n    }\r\n    else {\r\n        this.printPermit();\r\n    } \r\n  }\r\n\r\n  cancel() {\r\n    this.viewCtrl.dismiss();\r\n  }\r\n\r\n  printPermit() {\r\n    var win: any;\r\n    win = window;\r\n    var printContent = document.getElementById('printArea').innerHTML;\r\n    var printWindow = win.open('', '_blank', 'top=0,left=0,height=auto,width=auto');\r\n    printWindow.document.open();\r\n    printWindow.document.write(`<html><head><title>Daily Reprot `, `</title><style>\r\n       \r\n    table {\r\n      border-collapse: collapse;\r\n      width: 100%;\r\n    }\r\n    .print-align {\r\n        text-align: center;\r\n    }\r\n    td {\r\n      padding: 5px 0px 5px 15px;\r\n      }\r\n\r\n    table, td, th {\r\n      border: 1px solid black;\r\n    }\r\n\r\n    .print-margin{\r\n       margin-top: 5px;\r\n    }\r\n\r\n    .txt-align{\r\n      text-align: center;\r\n      max-width: 60%;\r\n  }\r\n    .print-td{\r\n      width: 40%;\r\n    }\r\n\r\n    .print-orient{\r\n      font-size: 0.5rem;\r\n     \r\n    }\r\n    .logo-print{\r\n      width:291px;\r\n      height:109px;\r\n      display: list-item;\r\n      list-style-image: url(../assets/images/NOG-LOGO.jpg);\r\n      list-style-position: inside;\r\n    }\r\n\r\n           </style></head><body></body></html>`);\r\n    printWindow.document.write(printContent);\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  }\r\n\r\n  printMobile() {\r\n    this.printer.isAvailable().then((success) => {\r\n      this.printer.print(document.getElementById('printArea').innerHTML, this.options).then();\r\n    }, (error) => {\r\n      console.log('printer not available');\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/printdailyreport/printdailyreport.ts"],"sourceRoot":""}